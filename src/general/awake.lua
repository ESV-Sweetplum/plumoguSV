function awake()
    local tempGlobalVars = read()
    if (not tempGlobalVars) then tempGlobalVars = {} end
    state.SetValue("global_pulseCoefficient", tonumber(tempGlobalVars.pulseCoefficient))
    state.SetValue("global_stepSize", tonumber(tempGlobalVars.stepSize))
    state.SetValue("global_keyboardMode", tempGlobalVars.keyboardMode == "true" and true or false)
    state.SetValue("global_dontReplaceSV", tempGlobalVars.dontReplaceSV == "true" and true or false)
    state.SetValue("global_upscroll", tempGlobalVars.upscroll == "true" and true or false)
    state.SetValue("global_colorThemeIndex", tonumber(tempGlobalVars.colorThemeIndex))
    state.SetValue("global_styleThemeIndex", tonumber(tempGlobalVars.styleThemeIndex))
    state.SetValue("global_rgbPeriod", tonumber(tempGlobalVars.rgbPeriod))
    state.SetValue("global_cursorTrailIndex", tonumber(tempGlobalVars.cursorTrailIndex))
    state.SetValue("global_cursorTrailShapeIndex", tonumber(tempGlobalVars.cursorTrailShapeIndex))
    state.SetValue("global_effectFPS", tonumber(tempGlobalVars.effectFPS))
    state.SetValue("global_cursorTrailPoints", tonumber(tempGlobalVars.cursorTrailPoints))
    state.SetValue("global_cursorTrailSize", tonumber(tempGlobalVars.cursorTrailSize))
    state.SetValue("global_snakeSpringConstant", tonumber(tempGlobalVars.snakeSpringConstant))
    state.SetValue("global_cursorTrailGhost", tempGlobalVars.cursorTrailGhost == "true" and true or false)
    state.SetValue("global_drawCapybara", tempGlobalVars.drawCapybara == "true" and true or false)
    state.SetValue("global_drawCapybara2", tempGlobalVars.drawCapybara2 == "true" and true or false)
    state.SetValue("global_drawCapybara312", tempGlobalVars.drawCapybara312 == "true" and true or false)
    state.SetValue("global_ignoreNotes", tempGlobalVars.BETA_IGNORE_NOTES_OUTSIDE_TG == "true" and true or false)
    state.SetValue("global_advancedMode", tempGlobalVars.advancedMode == "true" and true or false)

    -- listen(function (event, history_type) print(event, history_type) end)
end
